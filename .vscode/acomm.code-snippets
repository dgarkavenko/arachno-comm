{
	// Place your helloworld workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	
		"Foreach": {
		  "prefix": ["foreach"],
		  "body": ["for (auto ${2:element} : ${1:array}) {", "\t$0", "}"],
		  "description": "A for loop."
		},


		"new_system": {
			"prefix": [".system"],
			"body": ["#pragma once\n#include \"game_data.h\"\n#include \"components.h\"\n\nclass ${1:name}\n{\npublic:\n    ${1:name}(GameDataRef data) : _data(data){init();};\n    void update(float dt);\nprotected:\n    GameDataRef _data;\n    void init();\n};\n"],
			"description": "system template."
		},

		"push_delegate":{
			"prefix": [".push delegate"],
			"body": ["update_delegate delegate{};\ndelegate.connect<&${1:name}::update>(this);\n_data->delegates.push_back(delegate);"],
			"description": "push delegate"
		}
	}
	  
